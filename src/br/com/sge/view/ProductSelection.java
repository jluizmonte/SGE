package br.com.sge.view;

import br.com.sge.model.ProdutoModel;
import br.com.sge.service.ProdutoService;
import br.com.sge.util.EstiloTableHeader;
import br.com.sge.util.EstiloTableRenderer;
import br.com.sge.util.Mascaras;
import br.com.sge.util.MyScrollbarUI;
import br.com.sge.util.alerts.AWTUtilities;
import br.com.sge.util.alerts.ErrorAlert;
import br.com.sge.util.alerts.WarningAlertAddProduct;
import br.com.sge.util.alerts.WarningAmount;
import java.util.ArrayList;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.ListSelectionModel;
import javax.swing.RowFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
import javax.swing.table.TableRowSorter;

/**
 *
 * @author Rojeru San
 */
public class ProductSelection extends javax.swing.JDialog {

    ProdutoModel produtoModel = new ProdutoModel();
    ProdutoService produtoService = new ProdutoService();
    ArrayList<ProdutoModel> listaProdutoModel = new ArrayList<>();
    Mascaras mascaras = new Mascaras();
    public static int productCode;
    public static int productQuantity;

    /**
     * Creates new form Principal
     *
     * @param parent
     * @param modal
     */
    public ProductSelection(JFrame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        ProductSelection.jtProduct.getTableHeader().setDefaultRenderer(new EstiloTableHeader());
        ProductSelection.jtProduct.setDefaultRenderer(Object.class, new EstiloTableRenderer());
        ProductSelection.jtProduct.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        jScrollPane1.getViewport().setBackground(new java.awt.Color(255, 255, 255));
        jScrollPane1.getViewport().setBackground(new java.awt.Color(255, 255, 255));
        jScrollPane1.getVerticalScrollBar().setUI(new MyScrollbarUI());
        jScrollPane1.getHorizontalScrollBar().setUI(new MyScrollbarUI());
        this.setLocation(330, 120);
        AWTUtilities.setOpaque(this, false);

        this.jtfQtdeStock.setVisible(false);

        //  setQtProduct();
        listProducts();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panel1 = new org.edisoncor.gui.panel.Panel();
        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel10 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jbClose = new principal.MaterialButton();
        jPanel7 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jtProduct = new javax.swing.JTable();
        jPanel5 = new javax.swing.JPanel();
        jbAdd = new principal.MaterialButtonCircle();
        jtfSearch = new app.bolivia.swing.JCTextField();
        jLabel3 = new javax.swing.JLabel();
        jtfQtde = new app.bolivia.swing.JCTextField();
        jLabel9 = new javax.swing.JLabel();
        jtfQtdeStock = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setUndecorated(true);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        panel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/sge/images/alerts/fondo.png"))); // NOI18N
        panel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(58, 159, 171), 5));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel2.setBackground(new java.awt.Color(58, 159, 171));

        jLabel10.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/sge/images/icon/productos.png"))); // NOI18N

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("SELEÇÃO DE PRODUTOS DISPONÍVEIS PARA VENDA");

        jbClose.setBackground(new java.awt.Color(255, 255, 255));
        jbClose.setForeground(new java.awt.Color(58, 159, 171));
        jbClose.setText("X");
        jbClose.setToolTipText("");
        jbClose.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jbClose.setFont(new java.awt.Font("Roboto Medium", 1, 20)); // NOI18N
        jbClose.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbCloseActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel10)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 308, Short.MAX_VALUE)
                .addComponent(jbClose, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel1)
                    .addComponent(jbClose, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(0, 11, Short.MAX_VALUE))
        );

        jPanel1.add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(5, 5, 950, -1));

        jPanel7.setBackground(new java.awt.Color(58, 159, 171));

        jtProduct.setBackground(new java.awt.Color(204, 204, 204));
        jtProduct.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jtProduct.setForeground(new java.awt.Color(255, 255, 255));
        jtProduct.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "COD", "DESCRIÇÃO", "CATEGORIA", "R$ PREÇO", "ESTOQUE"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jtProduct.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jtProduct.setDoubleBuffered(true);
        jtProduct.setRowHeight(20);
        jtProduct.setSelectionBackground(new java.awt.Color(0, 153, 255));
        jtProduct.getTableHeader().setReorderingAllowed(false);
        jtProduct.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jtProductMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jtProduct);
        if (jtProduct.getColumnModel().getColumnCount() > 0) {
            jtProduct.getColumnModel().getColumn(0).setMinWidth(30);
            jtProduct.getColumnModel().getColumn(0).setPreferredWidth(30);
            jtProduct.getColumnModel().getColumn(1).setResizable(false);
            jtProduct.getColumnModel().getColumn(2).setResizable(false);
            jtProduct.getColumnModel().getColumn(3).setResizable(false);
            jtProduct.getColumnModel().getColumn(4).setResizable(false);
            jtProduct.getColumnModel().getColumn(4).setPreferredWidth(10);
        }

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 920, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 428, Short.MAX_VALUE)
                .addContainerGap())
        );

        jPanel1.add(jPanel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 130, 940, 450));

        jPanel5.setBackground(new java.awt.Color(58, 159, 171));
        jPanel5.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());
        jPanel1.add(jPanel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 330, 960, 260));

        jbAdd.setBackground(new java.awt.Color(58, 159, 171));
        jbAdd.setForeground(new java.awt.Color(255, 255, 255));
        jbAdd.setText("+");
        jbAdd.setToolTipText("");
        jbAdd.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jbAdd.setFont(new java.awt.Font("Roboto Medium", 1, 24)); // NOI18N
        jbAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbAddActionPerformed(evt);
            }
        });
        jPanel1.add(jbAdd, new org.netbeans.lib.awtextra.AbsoluteConstraints(890, 70, 60, 60));

        jtfSearch.setBorder(null);
        jtfSearch.setForeground(new java.awt.Color(58, 159, 171));
        jtfSearch.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jtfSearch.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jtfSearch.setPlaceholder("BUSCAR");
        jtfSearch.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jtfSearchKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jtfSearchKeyTyped(evt);
            }
        });
        jPanel1.add(jtfSearch, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 80, 140, 30));

        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/sge/images/icon/campo-buscar.png"))); // NOI18N
        jPanel1.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 70, 210, -1));

        jtfQtde.setBorder(null);
        jtfQtde.setForeground(new java.awt.Color(58, 159, 171));
        jtfQtde.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jtfQtde.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jtfQtde.setPlaceholder("QUANTIDADE");
        jtfQtde.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jtfQtdeKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jtfQtdeKeyTyped(evt);
            }
        });
        jPanel1.add(jtfQtde, new org.netbeans.lib.awtextra.AbsoluteConstraints(760, 80, 110, 30));

        jLabel9.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/sge/images/icon/campo-cantidad.png"))); // NOI18N
        jPanel1.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(700, 70, -1, -1));

        jtfQtdeStock.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jtfQtdeStock.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jtfQtdeStock.setText("QUANTIDADE");
        jPanel1.add(jtfQtdeStock, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 80, -1, 29));

        panel1.add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(12, 8, 960, 590));

        getContentPane().add(panel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 990, 610));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jtfSearchKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtfSearchKeyReleased
        searchProduct();
    }//GEN-LAST:event_jtfSearchKeyReleased

    private void jtfSearchKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtfSearchKeyTyped
        char letras = evt.getKeyChar();

        if (Character.isLowerCase(letras)) {
            String cad = ("" + letras).toUpperCase();
            letras = cad.charAt(0);
            evt.setKeyChar(letras);
        }
    }//GEN-LAST:event_jtfSearchKeyTyped

    private void jbAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbAddActionPerformed
        addProducts();
    }//GEN-LAST:event_jbAddActionPerformed

    private void jtfQtdeKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtfQtdeKeyTyped
        char num = evt.getKeyChar();
        if ((num < '0' || num > '9')) {
            evt.consume();
        }
    }//GEN-LAST:event_jtfQtdeKeyTyped

    private void jtProductMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jtProductMouseClicked
//        if (evt.getClickCount() == 2) {
//            if (this.txtCantidad.getText().equals("")) {
//                ErrorAlert er = new ErrorAlert(new JFrame(), true);
//                er.titulo.setText("OOPS...");
//                er.msj.setText("DEBES INGRESAR UNA");
//                er.msj1.setText("CANTIDAD");
//                er.setVisible(true);
//            } else {
//                int fila = this.tabla.getSelectedRow();
//
//                if (this.tabla.getValueAt(fila, 5).toString().equals("")) {
//                    ventas.Opciones.enviar(Integer.parseInt(this.tabla.getValueAt(fila, 0).toString()), Integer.parseInt(this.txtCantidad.getText()));
//                    this.txtCantidad.setText("");
//                    this.dispose();
//                } else {
//
//                    producto.Sentencias s = new producto.Sentencias();
//
//                    int total = Integer.parseInt(this.cantidadAlmacen.getText()) - Integer.parseInt(this.txtCantidad.getText());
//
//                    if (total < 0) {
//                        ErrorAlert er = new ErrorAlert(new JFrame(), true);
//                        er.titulo.setText("OOPS...");
//                        er.msj.setText("VERIFICA EL ALMACEN");
//                        er.msj1.setText("");
//                        er.setVisible(true);
//                    } else {
//                        int fila1 = this.tabla.getSelectedRow();
//                        s.setStock(String.valueOf(total));
//                        s.setId(Integer.parseInt(this.tabla.getValueAt(fila1, 0).toString()));
//
//                        int opcion = producto.Opciones.actualizarStock(s);
//                        if (opcion != 0) {
//                            String fila2 = this.tabla.getValueAt(fila1, 0).toString();
//                            Opciones.listar("");
//                            seleccionaFila(fila2);
//                            ventas.Opciones.enviar(Integer.parseInt(this.tabla.getValueAt(fila, 0).toString()), Integer.parseInt(this.txtCantidad.getText()));
//                            this.txtCantidad.setText("");
//                            this.dispose();
//                        }
//                    }
//                }
//            }
//        }

//        int fila = jtProduct.getSelectedRow();
//        jtfQtdeStock.setText(jtProduct.getValueAt(fila, 4).toString());
//        jtfQtdeStock.setVisible(true);
        WarningAmount w = new WarningAmount(new JFrame(), true);
        w.setVisible(true);
        ProductSelection.productQuantity = Integer.parseInt(WarningAmount.jtfProductQuant.getText());
        int row = jtProduct.getSelectedRow();
        int c = (int) jtProduct.getValueAt(row, 0);
        produtoModel = produtoService.getProdutoDAO(c);
//        if (productQuantity > produtoModel.getProQuantidadeEstoque()) {
//            //   WarningAmount.jtfProductQuant.setText("");
//            ErrorAlert errorAlert = new ErrorAlert(new JFrame(), true);
//            ErrorAlert.titulo.setText("AVISO!");
//            ErrorAlert.msj.setText("QUANTIDADE INDIPONÍVEL");
//            ErrorAlert.msj1.setText("INSIRA UMA QUANTIDADE MENOR");
//            errorAlert.setVisible(true);
//            new WarningAmount(new JFrame(), true).setVisible(true);
//        } else {            
//        }
        addProducts();
    }//GEN-LAST:event_jtProductMouseClicked

    private void jbCloseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbCloseActionPerformed
        //   System.exit(0);
        this.dispose();
    }//GEN-LAST:event_jbCloseActionPerformed

    private void jtfQtdeKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtfQtdeKeyPressed
        addProducts();
    }//GEN-LAST:event_jtfQtdeKeyPressed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {

        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ProductSelection.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        //</editor-fold>
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            ProductSelection dialog = new ProductSelection(new javax.swing.JFrame(), true);
            dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                @Override
                public void windowClosing(java.awt.event.WindowEvent e) {
                    System.exit(0);
                }
            });
            dialog.setVisible(true);
        });
    }

    private void listProducts() {
        listaProdutoModel = produtoService.getListaProdutoDAO();
        DefaultTableModel modelo = (DefaultTableModel) jtProduct.getModel();

        //Setando a quantidade de linhas que a tabela para não haver duplicação de dados
        modelo.setNumRows(0);
        // insere os produtos na tabela
        int cont = listaProdutoModel.size();
        for (int i = 0; i < cont; i++) {
            modelo.addRow(new Object[]{
                listaProdutoModel.get(i).getProCodigoProduto(),
                listaProdutoModel.get(i).getProDescricao(),
                listaProdutoModel.get(i).getProCategoria(),
                listaProdutoModel.get(i).getProValorUnitario(),
                listaProdutoModel.get(i).getProQuantidadeEstoque(),
                listaProdutoModel.get(i).getProValorTotal()
            });
        }
    }

    private void searchProduct() {
        DefaultTableModel modelo = (DefaultTableModel) jtProduct.getModel();
        final TableRowSorter<TableModel> classificador = new TableRowSorter<>(modelo);
        jtProduct.setRowSorter(classificador);
        String texto = jtfSearch.getText();
        classificador.setRowFilter(RowFilter.regexFilter(texto, 1));
    }

    public void addProducts() {
        if (ProductSelection.jtProduct.getRowCount() < 1) {
            ErrorAlert er = new ErrorAlert(new JFrame(), true);
            ErrorAlert.titulo.setText("AVISO!");
            ErrorAlert.msj.setText("A TABELA ESTÁ SEM REGISTROS");
            ErrorAlert.msj1.setText("");
            er.setVisible(true);
        } else {
            if (ProductSelection.jtProduct.getSelectedRowCount() < 1) {
                ErrorAlert er = new ErrorAlert(new JFrame(), true);
                ErrorAlert.titulo.setText("AVISO!");
                ErrorAlert.msj.setText("SELECIONA UM ");
                ErrorAlert.msj1.setText("REGISTRO");
                er.setVisible(true);
            } else {
                productCode = ProductSelection.jtProduct.getSelectedRow();
                produtoService.getProdutoDAO(Integer.parseInt(ProductSelection.jtProduct.getValueAt(productCode, 0).toString()), productQuantity);
                ProductSelection.jtfQtdeStock.setText("");
                WarningAlertAddProduct w = new WarningAlertAddProduct(new JFrame(), true);
                WarningAlertAddProduct.titulo.setText("Deseja inserir mais produtos?");
                WarningAlertAddProduct.msj.setText("CLIQUE EM OK PARA INSERIR");
                WarningAlertAddProduct.msj1.setText("MAIS PRODUTOS A VENDA");
                w.setVisible(true);
            }
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JScrollPane jScrollPane1;
    private principal.MaterialButtonCircle jbAdd;
    private principal.MaterialButton jbClose;
    public static javax.swing.JTable jtProduct;
    public static app.bolivia.swing.JCTextField jtfQtde;
    public static javax.swing.JLabel jtfQtdeStock;
    public static app.bolivia.swing.JCTextField jtfSearch;
    private org.edisoncor.gui.panel.Panel panel1;
    // End of variables declaration//GEN-END:variables

}
